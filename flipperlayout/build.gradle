apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'flipperlayout'

    publishedGroupId = 'com.juniperphoton'
    libraryName = 'flipperlayout'
    artifact = 'flipperlayout'

    libraryDescription = 'A view that performs perspective rotatation.'

    siteUrl = 'https://github.com/JuniperPhoton/FlipperLayout'
    gitUrl = 'https://github.com/JuniperPhoton/FlipperLayout.git'

    libraryVersion = '1.2.1'

    developerId = 'juniperphoton'
    developerName = 'JuniperPhoton'
    developerEmail = 'dengweichao@hotmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha01'
    testImplementation 'junit:junit:4.12'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'

bintray {
    def properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    def userName = properties.getProperty("user")
    def apiKey = properties.getProperty("apiKey")

    user = userName
    key = apiKey
}
